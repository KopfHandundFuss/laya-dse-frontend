<template>
  <div v-if="simple !== '' || isAuthor"
    class="ly-media-simple position-relative mb-3">

    <div class="text text-secondary">
      <i class="far fa-lightbulb"></i>
      <a v-if="!profile.prefs.media.simple" href='#'
        class="media-switch ly-focus" @click.prevent="toggleMedia('simple')">
        Inhalt in Einfacher Sprache anzeigen
      </a>
      <a v-else href='#'
        class="media-switch ly-focus" @click.prevent="toggleMedia('simple')">
        Inhalt in Einfacher Sprache verstecken
      </a>
    </div>

    <div v-show="profile.prefs.media.simple">
      <span v-html="simple"></span>
    </div>

    <!-- author controls -->
    <div v-if="isAuthor && profile.prefs.media.simple" class="author">
      <textarea v-model="simple" class="w-100"
        placeholder="HTML">
      </textarea>
      <div class="author-controls">
        <ly-lang-dd :onChoose="setContent"></ly-lang-dd>
        <button class="btn btn-sm btn-warning" @click="clear">
          <i class="fas fa-times"></i> Leeren
        </button>
        <button class="btn btn-sm btn-primary" @click="save">
          <i class="fas fa-check"></i> Speichern
        </button>
      </div>
      <p class="m-0"><b>{{msg}}</b></p>
    </div>

    <!-- media type hint -->
    <span v-if="isAuthor" class="hint text-primary">
      <ly-simple-icon></ly-simple-icon>
    </span>
  </div>
</template>

<script>
import {mapState, mapGetters, mapMutations} from 'vuex'

import lyLangDd from '@comps/lang-dd'
import lySimpleIcon from '@comps/simple-icon'

export default {
  name: 'ly-media-simple',
  created () {
    this.setContent('de')
  },
  data () {
    return {
      simple: '',

      msg: '',
      lang: ''
    }
  },
  props: {
    contents: Array,
    update: Function
  },
  computed: {
    ...mapState(['profile']),
    ...mapGetters(['isAuthor'])
  },
  methods: {
    ...mapMutations(['toggleMedia']),

    save: function () {
      const {simple, lang} = this
      this.update({simple}, lang)
    },
    clear: function () {
      this.simple = ''
    },
    setContent: function (lang) {
      const contentByLang = this.contents.find(c => c.lang === lang)
      this.lang = lang
      this.simple = contentByLang.simple
    }
  },
  components: {
    lyLangDd, lySimpleIcon
  }
}
</script>

<style scoped>
.author {
  position: relative;
  border: 2px solid lightskyblue;
}
.author-controls {
  position: absolute;
  top: 0;
  right: 0;
}
textarea {
  height: 10rem;
}
.hint {
  position: absolute;
  top: 0;
  left: -2rem;
}
.media-switch {
  color: #444;
  text-decoration: underline;
}

</style>
